{"version":3,"file":"static/js/505.195aa6a0.chunk.js","mappings":"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","sources":["pages/SignUp.jsx","pages/StylePajes.jsx"],"sourcesContent":["import {\n  Avatar,\n  Button,\n  Container,\n  Typography,\n  CssBaseline,\n  TextField,\n  Box,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createUsers } from 'services/authOperations';\nimport { avatarStyle, boxBottomFStyle, boxFormStyle } from './StylePajes';\nimport { NavLink } from 'react-router-dom';\n\nexport default function SignUp() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const onChangeInput = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onSubmitUser = event => {\n    event.preventDefault();\n    const newUser = { name, email, password };\n    dispatch(createUsers(newUser));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box sx={boxFormStyle}>\n        <Avatar sx={avatarStyle}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" onSubmit={onSubmitUser} sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            helperText=\"The name must contain only letters, apostrophes, hyphens and indents.\"\n            inputProps={{\n              inputMode: 'text',\n              pattern: '^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$',\n            }}\n            autoComplete=\"name\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n            fullWidth\n            label=\"Name\"\n            onChange={onChangeInput}\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            helperText=\"Please enter a valid email address\"\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            name=\"email\"\n            pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"\n            value={email}\n            autoComplete=\"email\"\n            onChange={onChangeInput}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            helperText=\"The password must contain at least 7 characters\"\n            fullWidth\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            label=\"Password\"\n            pattern=\"^[a-zA-Z0-9!@#$%^&*()-_=+`~[\\]{}|:<>/?]+$\"\n            id=\"password\"\n            autoComplete=\"new-password\"\n            onChange={onChangeInput}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{\n              mt: 3,\n              mb: 2,\n              backgroundColor: 'teal',\n            }}\n          >\n            Sign Up\n          </Button>\n          <Box sx={boxBottomFStyle}>\n            <NavLink to=\"/login\">Already have an account? Sign in</NavLink>\n          </Box>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","export const boxFormStyle = {\n  marginTop: 8,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n};\n\nexport const boxBottomFStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  mb: 4,\n  alignItems: 'center',\n};\n\nexport const avatarStyle = {\n  m: 1,\n  bgcolor: 'secondary.main',\n};\n"],"names":["SignUp","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","onChangeInput","event","_event$currentTarget","currentTarget","value","_jsxs","Container","component","maxWidth","children","_jsx","CssBaseline","Box","sx","boxFormStyle","Avatar","avatarStyle","LockOutlinedIcon","Typography","variant","onSubmit","preventDefault","newUser","createUsers","mt","TextField","margin","helperText","inputProps","inputMode","pattern","autoComplete","required","fullWidth","label","onChange","autoFocus","id","type","Button","mb","backgroundColor","boxBottomFStyle","NavLink","to","marginTop","display","flexDirection","alignItems","justifyContent","m","bgcolor"],"sourceRoot":""}