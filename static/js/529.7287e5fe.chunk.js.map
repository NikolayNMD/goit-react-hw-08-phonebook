{"version":3,"file":"static/js/529.7287e5fe.chunk.js","mappings":"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","sources":["components/old/ContactForm.jsx","components/old/Filter.jsx","components/old/ContactList.jsx","pages/Contacts.jsx","pages/Home.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n// import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getPhoneBookValue,\n  selectIsContactAdd,\n} from '../../redux/phoneBookSlice';\nimport Notiflix from 'notiflix';\nimport { postContact } from 'services/contactsOperations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [add, setAdd] = useState(false);\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getPhoneBookValue);\n  const isContactAdd = useSelector(selectIsContactAdd);\n\n  useEffect(() => {\n    setAdd(false);\n  }, [contacts]);\n\n  useEffect(() => {\n    if (isContactAdd) {\n      setName('');\n      setNumber('');\n    }\n  }, [isContactAdd]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // const id = nanoid();\n    const newContact = { name, number };\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (existingContact) {\n      Notiflix.Notify.warning(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    setAdd(true);\n    dispatch(postContact(newContact));\n    Notiflix.Notify.success(`${newContact.name} succesfully added!`);\n\n    // setName('');\n    // setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n        Number\n        <input\n          placeholder=\"Enter phone number\"\n          pattern=\"[0-9]*\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n        <Button type=\"submit\" disabled={!(name && number)}>\n          {add}\n          Add contact\n        </Button>\n      </Label>\n    </form>\n  );\n};\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n  border-radius: 5px;\n  background-color: aliceblue;\n  padding: 30px 10px;\n`;\n\nconst Button = styled.button`\n  cursor: pointer;\n  margin: 10px auto 0;\n  width: 100px;\n  border: 1px solid black;\n  border-radius: 2px;\n  background-color: lavender;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, setFilter } from '../../redux/filterSlice';\nimport styled from 'styled-components';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <label style={{ color: 'white' }}>\n      Find contacts by name:\n      <Input\n        onChange={handleFilterChange}\n        name=\"filter\"\n        type=\"text\"\n        placeholder=\"Search by name\"\n        filter={filter}\n      />\n    </label>\n  );\n};\n\nconst Input = styled.input`\n  margin-left: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  getError,\n  getIsLoading,\n  getPhoneBookValue,\n} from '../../redux/phoneBookSlice';\nimport { styled } from 'styled-components';\nimport { getFilter } from '../../redux/filterSlice';\nimport Notiflix from 'notiflix';\nimport { getContacts, delContact } from 'services/contactsOperations';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getPhoneBookValue);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  const handleDeleteContact = contactId => {\n    dispatch(delContact(contactId));\n    Notiflix.Notify.failure('Contact succesfully deleted!');\n  };\n\n  return (\n    <List>\n      {contacts.length === 0 && <p>You don't have any contacts yet.</p>}\n\n      {isLoading && <p>Loading...</p>}\n\n      {error && <p>{error}</p>}\n      {filteredContacts.map(contact => (\n        <Item key={contact.id}>\n          {contact.name}: {contact.number}\n          <Buton onClick={() => handleDeleteContact(contact.id)} type=\"button\">\n            Delete\n          </Buton>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  border: 2px dotted black;\n  background-color: aliceblue;\n  border-radius: 5px;\n  list-style-type: none;\n  padding: 10px;\n  margin-bottom: 0;\n  height: 100px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    overflow: hidden;\n  }\n`;\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 2px;\n`;\n\nconst Buton = styled.button`\n  border: 2px solid red;\n  border-radius: 10px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: red;\n    color: white;\n  }\n`;\n","import { ContactForm } from '../components/old/ContactForm';\nimport { Filter } from '../components/old/Filter';\nimport { ContactList } from '../components/old/ContactList';\nimport styled from 'styled-components';\nimport { HomeBG } from './Home';\n\nconst Contacts = () => {\n  return (\n    <HomeBG>\n      <Wrapper>\n        <Container>\n          <h1 style={{ textAlign: 'center', color: 'white' }}>Phonebook</h1>\n          <ContactForm />\n          <h2 style={{ textAlign: 'center', color: 'white' }}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Container>\n      </Wrapper>\n    </HomeBG>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  padding: 40px;\n  margin-top: 70px;\n  background-color: rgba(71, 176, 192, 0.7);\n  border-radius: 5px;\n`;\n\nexport default Contacts;\n","import { styled } from 'styled-components';\nimport hero from 'images/girl_with_phone.jpg';\nimport { NavLink } from 'react-router-dom';\n\nconst Home = () => {\n  return (\n    <div>\n      <HomeBG>\n        <StyledContainer>\n          <h1>\n            Hi! I'm your <span>phonebook</span>.\n          </h1>\n          <h3>Please login or register an account now.</h3>\n          <BestBtn to=\"/login\">Sign In!</BestBtn>\n        </StyledContainer>\n      </HomeBG>\n    </div>\n  );\n};\n\nexport default Home;\n\nexport const HomeBG = styled.section`\n  background-image: linear-gradient(\n      rgba(21, 22, 22, 0.7),\n      rgba(22, 23, 40, 0.7)\n    ),\n    url(${hero});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 609.9px;\n  position: relative;\n`;\n\nconst StyledContainer = styled.div`\n  position: absolute;\n  right: 16%;\n  top: 25%;\n  h1 {\n    font-family: 'Prompt', sans-serif;\n    font-size: 30px;\n    font-weight: 600;\n    color: white;\n    margin-bottom: 10px;\n    span {\n      color: orange;\n    }\n  }\n  h3 {\n    font-family: 'Prompt', sans-serif;\n    color: white;\n    font-size: 20px;\n    font-weight: 600;\n    margin-bottom: 15px;\n  }\n`;\n\nconst BestBtn = styled(NavLink)`\n  font-family: 'Prompt', sans-serif;\n  display: inline-block;\n  padding: 15px 30px;\n  background-color: teal;\n  color: white;\n  font-size: 16px;\n  text-decoration: none;\n  font-weight: 500;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  position: relative;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 2px 25px teal;\n  position: relative;\n  &:is(:hover, :focus) {\n    background-color: white;\n    color: orange;\n  }\n`;\n"],"names":["ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_useState5","_useState6","add","setAdd","dispatch","useDispatch","contacts","useSelector","getPhoneBookValue","isContactAdd","selectIsContactAdd","useEffect","handleChange","event","_event$target","target","value","_jsx","onSubmit","preventDefault","newContact","find","contact","toLowerCase","Notiflix","concat","postContact","children","_jsxs","Label","placeholder","pattern","type","onChange","required","Button","disabled","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Filter","filter","getFilter","style","color","Input","setFilter","ContactList","getContacts","isLoading","getIsLoading","error","getError","filteredContacts","includes","List","length","map","Item","Buton","onClick","contactId","id","delContact","_templateObject3","Wrapper","Container","HomeBG","textAlign","StyledContainer","BestBtn","to","hero","NavLink"],"sourceRoot":""}