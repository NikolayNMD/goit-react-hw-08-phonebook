{"version":3,"file":"static/js/244.65bdbcaa.chunk.js","mappings":"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","sources":["components/old/ContactForm.jsx","components/old/Filter.jsx","components/old/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\n// import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPhoneBookValue } from '../../redux/phoneBookSlice';\nimport Notiflix from 'notiflix';\nimport { postContact } from 'services/contactsOperations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getPhoneBookValue);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // const id = nanoid();\n    const newContact = { name, phone };\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (existingContact) {\n      Notiflix.Notify.warning(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(postContact(newContact));\n    Notiflix.Notify.success(`${newContact.name} succesfully added!`);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          placeholder=\"Enter name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n        Number\n        <input\n          placeholder=\"Enter phone number\"\n          type=\"tel\"\n          name=\"number\"\n          value={phone}\n          onChange={handleChange}\n          required\n        />\n        <Button type=\"submit\" disabled={!(name && phone)}>\n          Add contact\n        </Button>\n      </Label>\n    </form>\n  );\n};\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n  border-radius: 5px;\n  background-color: aliceblue;\n  padding: 30px 10px;\n`;\n\nconst Button = styled.button`\n  cursor: pointer;\n  margin: 10px auto 0;\n  width: 100px;\n  border: 1px solid black;\n  border-radius: 2px;\n  background-color: lavender;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, setFilter } from '../../redux/filterSlice';\nimport styled from 'styled-components';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <label style={{ color: 'white' }}>\n      Find contacts by name:\n      <Input\n        onChange={handleFilterChange}\n        name=\"filter\"\n        type=\"text\"\n        placeholder=\"Search by name\"\n        filter={filter}\n      />\n    </label>\n  );\n};\n\nconst Input = styled.input`\n  margin-left: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  getError,\n  getIsLoading,\n  getPhoneBookValue,\n} from '../../redux/phoneBookSlice';\nimport { styled } from 'styled-components';\nimport { getFilter } from '../../redux/filterSlice';\nimport Notiflix from 'notiflix';\nimport { getContacts, delContact } from 'services/contactsOperations';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getPhoneBookValue);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  const handleDeleteContact = contactId => {\n    dispatch(delContact(contactId));\n    Notiflix.Notify.failure('Contact succesfully deleted!');\n  };\n\n  return (\n    <List>\n      {isLoading && <p>Loading...</p>}\n\n      {error && <p>{error}</p>}\n      {filteredContacts.map(contact => (\n        <Item key={contact.id}>\n          {contact.name}: {contact.phone}\n          <Buton onClick={() => handleDeleteContact(contact.id)} type=\"button\">\n            Delete\n          </Buton>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  border: 2px dotted black;\n  background-color: aliceblue;\n  border-radius: 5px;\n  list-style-type: none;\n  padding: 10px;\n  margin-bottom: 0;\n  height: 100px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    overflow: hidden;\n  }\n`;\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 2px;\n`;\n\nconst Buton = styled.button`\n  border: 2px solid red;\n  border-radius: 10px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: red;\n    color: white;\n  }\n`;\n","import { ContactForm } from '../components/old/ContactForm';\nimport { Filter } from '../components/old/Filter';\nimport { ContactList } from '../components/old/ContactList';\nimport styled from 'styled-components';\n\nconst Contacts = () => {\n  return (\n    <Wrapper>\n      <Container>\n        <h1 style={{ textAlign: 'center', color: 'white' }}>Phonebook</h1>\n        <ContactForm />\n        <h2 style={{ textAlign: 'center', color: 'white' }}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  padding: 40px;\n  margin: 10px;\n  background-color: rgba(71, 176, 192, 0.7);\n  border-radius: 5px;\n`;\n\nexport default Contacts;\n"],"names":["ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setNumber","dispatch","useDispatch","contacts","useSelector","getPhoneBookValue","handleChange","event","_event$target","target","value","_jsx","onSubmit","preventDefault","newContact","find","contact","toLowerCase","Notiflix","concat","postContact","children","_jsxs","Label","placeholder","type","onChange","required","Button","disabled","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Filter","filter","getFilter","style","color","Input","setFilter","ContactList","useEffect","getContacts","isLoading","getIsLoading","error","getError","filteredContacts","includes","List","map","Item","Buton","onClick","contactId","id","delContact","_templateObject3","Wrapper","Container","textAlign"],"sourceRoot":""}